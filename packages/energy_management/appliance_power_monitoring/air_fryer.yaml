timer:
  air_fryer_delayed_job_completion_timer:
    name: Air Fryer - Delayed Job Completion Timer
    duration: "00:15:00" # <- Note that the time here. Leave as it is (15 min)
    restore: true
    icon: mdi:stove

input_boolean:
  air_fryer_job_cycle:
    name: Air Fryer - Job Cycle
    icon: mdi:stove

  air_fryer_automation_self_trigger:
    name: Air Fryer - Automation Self-trigger
    icon: mdi:stove

input_select:
  air_fryer_state_machine:
    name: Air Fryer - State Machine
    options:
      - unplugged
      - idle
      - paused
      - detached_overload
      - job_ongoing
      - job_completed
    icon: mdi:stove

sensor:
  - name: Air Fryer Time Today
    platform: history_stats    
    entity_id: input_select.air_fryer_state_machine
    state: "job_ongoing"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    end: "{{ now() }}"

  - name: Air Fryer Cycles Today
    platform: history_stats    
    entity_id: input_select.air_fryer_state_machine
    state: "job_completed"
    type: count
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    end: "{{ now() }}"

template:
  - sensor:
      - name: Air Fryer Hours Available
        unique_id: sensor.air_fryer_hours_available
        icon: mdi:stove
        unit_of_measurement: hr
        state: >-
          {% set energy_per_hr=1.1 %}
          {% set surplus_capacity=states.binary_sensor.battery_non_viability.attributes.surplus_capacity %}
          {{ (surplus_capacity/energy_per_hr) | round(1) }}

      - name: Air Fryer Time Available String
        unique_id: sensor.air_fryer_time_available_string
        icon: mdi:stove
        state: >-
          {% set hours = states.sensor.air_fryer_hours_available.state | float | round(0,'floor') %}
          {% set minutes = ((states.sensor.air_fryer_hours_available.state | float - hours) * 60) | round(0) %}
          {% if hours > 0 %}{{ hours }}h {% endif %}{{ minutes }}m